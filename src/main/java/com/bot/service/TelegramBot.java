package com.bot.service;

import org.springframework.stereotype.Component;
import org.telegram.telegrambots.bots.TelegramLongPollingBot;
import org.telegram.telegrambots.meta.api.objects.Update;
import org.telegram.telegrambots.meta.api.methods.send.SendMessage;
import org.telegram.telegrambots.meta.exceptions.TelegramApiException;
import org.telegram.telegrambots.meta.TelegramBotsApi;
import org.telegram.telegrambots.updatesreceivers.DefaultBotSession;

import jakarta.annotation.PostConstruct;

@Component
public class TelegramBot extends TelegramLongPollingBot {

    private static final String BOT_USERNAME = "parsingAllGroup_bot";
    private static final String BOT_TOKEN = "7533612978:AAHBUoCQKzTX9DaP4ArQfFTkd5qtqeeFH0w";

    public TelegramBot() {
        try {
            TelegramBotsApi botsApi = new TelegramBotsApi(DefaultBotSession.class);
            botsApi.registerBot(this);
        } catch (TelegramApiException e) {
            e.printStackTrace();
        }
    }

    @Override
    public String getBotUsername() {
        return BOT_USERNAME;
    }

    @Override
    public String getBotToken() {
        return BOT_TOKEN;
    }

    @Override
    public void onUpdateReceived(Update update) {
        if (update.hasMessage() && update.getMessage().hasText()) {
            String messageText = update.getMessage().getText();
            long chatId = update.getMessage().getChatId();

            if (messageText.equalsIgnoreCase("/start")) {
                sendTextMessage(chatId, "–ü—Ä–∏–≤—ñ—Ç! –Ø AI-–±–æ—Ç –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥—É –∫–æ–Ω—Ç–µ–Ω—Ç—É. –ù–∞–ø–∏—à–∏ /help, —â–æ–± –¥—ñ–∑–Ω–∞—Ç–∏—Å—è –±—ñ–ª—å—à–µ.");
            } else if (messageText.equalsIgnoreCase("/help")) {
                sendTextMessage(chatId, "–û—Å—å —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –∫–æ–º–∞–Ω–¥:\n" +
                        "/start - –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞\n" +
                        "/help - –î–æ–ø–æ–º–æ–≥–∞\n" +
                        "üöÄ –°–∫–æ—Ä–æ –±—É–¥—É—Ç—å –Ω–æ–≤—ñ —Ñ—É–Ω–∫—Ü—ñ—ó!");
            } else {
                sendTextMessage(chatId, "–Ø –Ω–µ —Ä–æ–∑—É–º—ñ—é —Ü—é –∫–æ–º–∞–Ω–¥—É. –í–∏–∫–æ—Ä–∏—Å—Ç–∞–π /help –¥–ª—è —Å–ø–∏—Å–∫—É –∫–æ–º–∞–Ω–¥.");
            }
        }
    }

    private void sendTextMessage(long chatId, String text) {
        SendMessage message = new SendMessage();
        message.setChatId(chatId);
        message.setText(text);

        try {
            execute(message);
        } catch (TelegramApiException e) {
            e.printStackTrace();
        }
    }
}